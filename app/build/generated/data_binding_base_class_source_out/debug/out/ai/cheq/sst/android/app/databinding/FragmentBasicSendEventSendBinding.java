// Generated by view binder compiler. Do not edit!
package ai.cheq.sst.android.app.databinding;

import ai.cheq.sst.android.app.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBasicSendEventSendBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView cheqUuid;

  @NonNull
  public final MaterialButton cheqUuidClear;

  @NonNull
  public final TextView cheqUuidLabel;

  @NonNull
  public final ConstraintLayout cheqUuidLayout;

  @NonNull
  public final Spinner eventType;

  @NonNull
  public final TextView eventTypeLabel;

  @NonNull
  public final ConstraintLayout eventTypeLayout;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final SwitchCompat outputGeo;

  @NonNull
  public final TextView request;

  @NonNull
  public final TextView requestLabel;

  @NonNull
  public final ConstraintLayout requestLayout;

  @NonNull
  public final ScrollView requestScrollview;

  @NonNull
  public final TextView response;

  @NonNull
  public final TextView responseLabel;

  @NonNull
  public final ConstraintLayout responseLayout;

  @NonNull
  public final ScrollView responseScrollview;

  @NonNull
  public final Button send;

  @NonNull
  public final ConstraintLayout switchLayout;

  private FragmentBasicSendEventSendBinding(@NonNull FrameLayout rootView,
      @NonNull TextView cheqUuid, @NonNull MaterialButton cheqUuidClear,
      @NonNull TextView cheqUuidLabel, @NonNull ConstraintLayout cheqUuidLayout,
      @NonNull Spinner eventType, @NonNull TextView eventTypeLabel,
      @NonNull ConstraintLayout eventTypeLayout, @NonNull Guideline guideline,
      @NonNull SwitchCompat outputGeo, @NonNull TextView request, @NonNull TextView requestLabel,
      @NonNull ConstraintLayout requestLayout, @NonNull ScrollView requestScrollview,
      @NonNull TextView response, @NonNull TextView responseLabel,
      @NonNull ConstraintLayout responseLayout, @NonNull ScrollView responseScrollview,
      @NonNull Button send, @NonNull ConstraintLayout switchLayout) {
    this.rootView = rootView;
    this.cheqUuid = cheqUuid;
    this.cheqUuidClear = cheqUuidClear;
    this.cheqUuidLabel = cheqUuidLabel;
    this.cheqUuidLayout = cheqUuidLayout;
    this.eventType = eventType;
    this.eventTypeLabel = eventTypeLabel;
    this.eventTypeLayout = eventTypeLayout;
    this.guideline = guideline;
    this.outputGeo = outputGeo;
    this.request = request;
    this.requestLabel = requestLabel;
    this.requestLayout = requestLayout;
    this.requestScrollview = requestScrollview;
    this.response = response;
    this.responseLabel = responseLabel;
    this.responseLayout = responseLayout;
    this.responseScrollview = responseScrollview;
    this.send = send;
    this.switchLayout = switchLayout;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBasicSendEventSendBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBasicSendEventSendBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_basic_send_event_send, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBasicSendEventSendBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cheq_uuid;
      TextView cheqUuid = ViewBindings.findChildViewById(rootView, id);
      if (cheqUuid == null) {
        break missingId;
      }

      id = R.id.cheq_uuid_clear;
      MaterialButton cheqUuidClear = ViewBindings.findChildViewById(rootView, id);
      if (cheqUuidClear == null) {
        break missingId;
      }

      id = R.id.cheq_uuid_label;
      TextView cheqUuidLabel = ViewBindings.findChildViewById(rootView, id);
      if (cheqUuidLabel == null) {
        break missingId;
      }

      id = R.id.cheq_uuid_layout;
      ConstraintLayout cheqUuidLayout = ViewBindings.findChildViewById(rootView, id);
      if (cheqUuidLayout == null) {
        break missingId;
      }

      id = R.id.event_type;
      Spinner eventType = ViewBindings.findChildViewById(rootView, id);
      if (eventType == null) {
        break missingId;
      }

      id = R.id.event_type_label;
      TextView eventTypeLabel = ViewBindings.findChildViewById(rootView, id);
      if (eventTypeLabel == null) {
        break missingId;
      }

      id = R.id.event_type_layout;
      ConstraintLayout eventTypeLayout = ViewBindings.findChildViewById(rootView, id);
      if (eventTypeLayout == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.output_geo;
      SwitchCompat outputGeo = ViewBindings.findChildViewById(rootView, id);
      if (outputGeo == null) {
        break missingId;
      }

      id = R.id.request;
      TextView request = ViewBindings.findChildViewById(rootView, id);
      if (request == null) {
        break missingId;
      }

      id = R.id.request_label;
      TextView requestLabel = ViewBindings.findChildViewById(rootView, id);
      if (requestLabel == null) {
        break missingId;
      }

      id = R.id.request_layout;
      ConstraintLayout requestLayout = ViewBindings.findChildViewById(rootView, id);
      if (requestLayout == null) {
        break missingId;
      }

      id = R.id.request_scrollview;
      ScrollView requestScrollview = ViewBindings.findChildViewById(rootView, id);
      if (requestScrollview == null) {
        break missingId;
      }

      id = R.id.response;
      TextView response = ViewBindings.findChildViewById(rootView, id);
      if (response == null) {
        break missingId;
      }

      id = R.id.response_label;
      TextView responseLabel = ViewBindings.findChildViewById(rootView, id);
      if (responseLabel == null) {
        break missingId;
      }

      id = R.id.response_layout;
      ConstraintLayout responseLayout = ViewBindings.findChildViewById(rootView, id);
      if (responseLayout == null) {
        break missingId;
      }

      id = R.id.response_scrollview;
      ScrollView responseScrollview = ViewBindings.findChildViewById(rootView, id);
      if (responseScrollview == null) {
        break missingId;
      }

      id = R.id.send;
      Button send = ViewBindings.findChildViewById(rootView, id);
      if (send == null) {
        break missingId;
      }

      id = R.id.switch_layout;
      ConstraintLayout switchLayout = ViewBindings.findChildViewById(rootView, id);
      if (switchLayout == null) {
        break missingId;
      }

      return new FragmentBasicSendEventSendBinding((FrameLayout) rootView, cheqUuid, cheqUuidClear,
          cheqUuidLabel, cheqUuidLayout, eventType, eventTypeLabel, eventTypeLayout, guideline,
          outputGeo, request, requestLabel, requestLayout, requestScrollview, response,
          responseLabel, responseLayout, responseScrollview, send, switchLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
